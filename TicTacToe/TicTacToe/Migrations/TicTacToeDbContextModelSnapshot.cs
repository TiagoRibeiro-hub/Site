// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicTacToe.Data;

#nullable disable

namespace TicTacToe.Migrations
{
    [DbContext(typeof(TicTacToeDbContext))]
    partial class TicTacToeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.1");

            modelBuilder.Entity("TicTacToe.Data.GameModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("IdGame")
                        .HasColumnType("TEXT");

                    b.Property<string>("Player1_Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Player2_Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("TicTacToe.Data.MovesModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GameModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Move")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GameModelId");

                    b.ToTable("Moves");
                });

            modelBuilder.Entity("TicTacToe.Data.ScoresTableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int>("Losses")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PlayerName")
                        .HasColumnType("TEXT");

                    b.Property<int>("Ties")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalGames")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalGamesVsHuman")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Victories")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ScoresTable");
                });

            modelBuilder.Entity("TicTacToe.Data.TotalGamesVsComputerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ScoresTableModelId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TotalGames")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TotalGamesEasy")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TotalGamesHard")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TotalGamesIntermediate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ScoresTableModelId");

                    b.ToTable("TotalGamesVsComputer");
                });

            modelBuilder.Entity("TicTacToe.Data.MovesModel", b =>
                {
                    b.HasOne("TicTacToe.Data.GameModel", null)
                        .WithMany("Moves")
                        .HasForeignKey("GameModelId");
                });

            modelBuilder.Entity("TicTacToe.Data.TotalGamesVsComputerModel", b =>
                {
                    b.HasOne("TicTacToe.Data.ScoresTableModel", null)
                        .WithMany("TotalGamesVsComputer")
                        .HasForeignKey("ScoresTableModelId");
                });

            modelBuilder.Entity("TicTacToe.Data.GameModel", b =>
                {
                    b.Navigation("Moves");
                });

            modelBuilder.Entity("TicTacToe.Data.ScoresTableModel", b =>
                {
                    b.Navigation("TotalGamesVsComputer");
                });
#pragma warning restore 612, 618
        }
    }
}
